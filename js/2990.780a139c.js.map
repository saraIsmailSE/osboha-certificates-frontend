{"version":3,"file":"js/2990.780a139c.js","mappings":"gGAAA,SAASA,EAAkBC,GACzB,IAAMC,EAAQC,KAAKC,MAAMH,GAAWE,KAAKC,MAAM,IAAID,MAC7CE,EAAUC,KAAKC,MAAOL,EAAQ,IAAQ,IACtCM,EAAUF,KAAKC,MAAOL,EAAQ,IAAO,GAAM,IAC3CO,EAAQH,KAAKC,MAAOL,EAAQ,KAAoB,IAChDQ,EAAOJ,KAAKC,MAAML,EAAQ,OAEhC,MAAO,CACLA,MAAAA,EACAQ,KAAAA,EACAD,MAAAA,EACAD,QAAAA,EACAH,QAAAA,EAEH,CAED,SAASM,EAAiBC,EAAMX,GAC9B,IAAMY,EAAQC,SAASC,cAAcH,GAC/BI,EAAWH,EAAME,cAAc,eAC/BE,EAAYJ,EAAME,cAAc,gBAChCG,EAAcL,EAAME,cAAc,kBAClCI,EAAcN,EAAME,cAAc,kBAExC,SAASK,IACP,IAAMC,EAAIrB,EAAiBC,GAE3Be,EAASM,UAAYD,EAAEX,KACvBO,EAAUK,WAAa,IAAMD,EAAEZ,OAAOc,OAAO,GAC7CL,EAAYI,WAAa,IAAMD,EAAEb,SAASe,OAAO,GACjDJ,EAAYG,WAAa,IAAMD,EAAEhB,SAASkB,OAAO,GAE7CF,EAAEnB,OAAS,GACbsB,cAAcC,EAEjB,CAEDL,IACA,IAAMK,EAAeC,YAAYN,EAAa,IAC/C,C,2BAED,IAAIO,EAAOb,SAASC,cAAc,cAAca,aAAa,kBAChDC,IAATF,IACFA,EAAOxB,KAAKC,MAAM,IAAID,MAAU,QAElC,IAAM2B,EAAW,IAAI3B,KAAKwB,GAC1BhB,EAAgB,aAAcmB,E","sources":["webpack://osboha180/./src/plugins/countdown/countdown.js"],"sourcesContent":["function getTimeRemaining (endtime) {\n  const total = Date.parse(endtime) - Date.parse(new Date())\n  const seconds = Math.floor((total / 1000) % 60)\n  const minutes = Math.floor((total / 1000 / 60) % 60)\n  const hours = Math.floor((total / (1000 * 60 * 60)) % 24)\n  const days = Math.floor(total / (1000 * 60 * 60 * 24))\n\n  return {\n    total,\n    days,\n    hours,\n    minutes,\n    seconds\n  }\n}\n\nfunction initializeClock (elem, endtime) {\n  const clock = document.querySelector(elem)\n  const daysSpan = clock.querySelector('[data-days]')\n  const hoursSpan = clock.querySelector('[data-hours]')\n  const minutesSpan = clock.querySelector('[data-minutes]')\n  const secondsSpan = clock.querySelector('[data-seconds]')\n\n  function updateClock () {\n    const t = getTimeRemaining(endtime)\n\n    daysSpan.innerHTML = t.days\n    hoursSpan.innerHTML = ('0' + t.hours).slice(-2)\n    minutesSpan.innerHTML = ('0' + t.minutes).slice(-2)\n    secondsSpan.innerHTML = ('0' + t.seconds).slice(-2)\n\n    if (t.total <= 0) {\n      clearInterval(timeinterval)\n    }\n  }\n\n  updateClock()\n  const timeinterval = setInterval(updateClock, 1000)\n}\n\nlet time = document.querySelector('.countdown').getAttribute('data-date')\nif (time === undefined) {\n  time = Date.parse(new Date()) + 15 * 24 * 60 * 60 * 1000\n}\nconst deadline = new Date(time)\ninitializeClock('.countdown', deadline)\n"],"names":["getTimeRemaining","endtime","total","Date","parse","seconds","Math","floor","minutes","hours","days","initializeClock","elem","clock","document","querySelector","daysSpan","hoursSpan","minutesSpan","secondsSpan","updateClock","t","innerHTML","slice","clearInterval","timeinterval","setInterval","time","getAttribute","undefined","deadline"],"sourceRoot":""}